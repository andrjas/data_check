[project]
name = "data_check"
version = "0.19.0"
description = "simple data validation"
authors = [{ name = "Andreas Rjasanow", email = "andrjas@gmail.com" }]
requires-python = "~=3.9,<3.14"
readme = "README.md"
license = "MIT"
keywords = [
    "data",
    "validation",
    "testing",
    "quality",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Other Audience",
    "Intended Audience :: Science/Research",
    "Topic :: Database",
    "Topic :: Software Development",
    "Topic :: Software Development :: Testing",
]
dependencies = [
    "SQLAlchemy>=2.0.19,<3",
    "pandas>=2.2.1,<3",
    "pyyaml~=6.0",
    "click>=8.1.5,<9",
    "colorama>=0.4.6,<0.5",
    "Jinja2>=3.1.2,<4",
    "openpyxl>=3.1.2,<4",
    "click-default-group>=1.2.2,<2",
    "Faker>=37.1.0",
    "pydantic>=2,<3",
]

[project.optional-dependencies]
postgres = ["psycopg2-binary>=2.9.6,<3"]
oracle = ["cx_Oracle>=8.3.0,<9"]
oracledb = ["oracledb>=3.1.0,<4"]
mysql = ["pymysql[rsa]>=1.1.0,<2"]
mssql = ["pyodbc>=5,<6"]
duckdb = ["duckdb-engine>=0.17.0,<0.18"]
databricks = ["databricks-sqlalchemy>=2.0.5,<3"]

[project.urls]
Homepage = "https://andrjas.github.io/data_check/"
Repository = "https://github.com/andrjas/data_check"

[project.scripts]
data_check = "data_check.cli.main:cli"

[dependency-groups]
dev = [
    "pytest>=8,<9",
    "pytest-parallel>=0.1.0,<0.2",
    "coverage>=7,<8",
    "mypy>=1.4.1,<2",
    "types-pyyaml>=6.0.12.10,<7",
    "pandas-stubs>=2.0.2.230605,<3",
    "types-colorama>=0.4.15.11,<0.5",
    "pre-commit>=4.2.0",
]

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.package-data]
# include scaffold_templates and other config files
data_check = ["**/*.yml"]

[tool.pytest.ini_options]
filterwarnings = [
    "error",
    "ignore::FutureWarning",
    "ignore::DeprecationWarning", # datetime.datetime.utcnow() is deprecated in Python 3.12
    "ignore:unclosed database in <sqlite3.Connection:ResourceWarning",  # ignore for Python 3.13
]

[tool.vulture]
paths = ["data_check", ".vulture_whitelist.py"]

[tool.mypy]
files = ["data_check/", "test/"]

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # eradicate
    "ERA",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-pytest-style
    "PT",
    # mccabe
    "C90",
    # pep8-naming
    "N",
    # Pylint
    "PL",
    # Ruff-specific rules
    "RUF"
]
ignore = ["A003"]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
